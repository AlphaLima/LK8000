/* 
   ORIGINALLY GENERATED BY XCI - see Common/Data/Input/h2cpp.pl 
   120302 THIS IS CUSTOM, we dont use h2cpp anymore because we load XCI from file everytime
   120604 added eventMinimapKey  number 66
 */

memset(Text2GCE, 0, sizeof(Text2GCE));
Text2GCE[GCE_COMMPORT_RESTART] = TEXT("COMMPORT_RESTART");
Text2GCE[GCE_FLARM_NOTRAFFIC] = TEXT("FLARM_NOTRAFFIC");
Text2GCE[GCE_FLARM_TRAFFIC] = TEXT("FLARM_TRAFFIC");
Text2GCE[GCE_FLIGHTMODE_CLIMB] = TEXT("FLIGHTMODE_CLIMB");
Text2GCE[GCE_FLIGHTMODE_CRUISE] = TEXT("FLIGHTMODE_CRUISE");
Text2GCE[GCE_FLIGHTMODE_FINALGLIDE] = TEXT("FLIGHTMODE_FINALGLIDE");
Text2GCE[GCE_FLIGHTMODE_FINALGLIDE_TERRAIN] = TEXT("FLIGHTMODE_FINALGLIDE_TERRAIN");
Text2GCE[GCE_FLIGHTMODE_FINALGLIDE_ABOVE] = TEXT("FLIGHTMODE_FINALGLIDE_ABOVE");
Text2GCE[GCE_FLIGHTMODE_FINALGLIDE_BELOW] = TEXT("FLIGHTMODE_FINALGLIDE_BELOW");
Text2GCE[GCE_LANDING] = TEXT("LANDING");
Text2GCE[GCE_STARTUP_REAL] = TEXT("STARTUP_REAL");
Text2GCE[GCE_STARTUP_SIMULATOR] = TEXT("STARTUP_SIMULATOR");
Text2GCE[GCE_TAKEOFF] = TEXT("TAKEOFF");
Text2GCE[GCE_TASK_NEXTWAYPOINT] = TEXT("TASK_NEXTWAYPOINT");
Text2GCE[GCE_TASK_START] = TEXT("TASK_START");
Text2GCE[GCE_TASK_FINISH] = TEXT("TASK_FINISH");
Text2GCE[GCE_TEAM_POS_REACHED] = TEXT("TEAM_POS_REACHED");
Text2GCE[GCE_ARM_READY] = TEXT("ARM_READY");
Text2GCE[GCE_TASK_CONFIRMSTART] = TEXT("TASK_CONFIRMSTART");
Text2GCE[GCE_POPUP_MULTISELECT] = TEXT("POPUP_MULTISELECT");
Text2GCE[GCE_WAYPOINT_DETAILS_SCREEN] = TEXT("WAYPOINT_DETAILS_SCREEN");
// Add new Event here ...
Text2GCE[GCE_COUNT] = TEXT("COUNT");
// Check for missing item
assert(std::find(std::begin(Text2GCE), std::end(Text2GCE), nullptr) == std::end(Text2GCE));
// Check for array overrun
static_assert(GCE_COUNT < std::size(Text2GCE), "invalid Text2GCE array size"); 


Text2NE[NE_COUNT] = TEXT("COUNT");
// Check for missing item
assert(std::find(std::begin(Text2NE), std::end(Text2NE), nullptr) == std::end(Text2NE));
// Check no array overrun
static_assert(NE_COUNT < std::size(Text2NE), "invalid Text2NE array size");

